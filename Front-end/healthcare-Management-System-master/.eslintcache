[{"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\index.js":"1","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\App.js":"2","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\reportWebVitals.js":"3","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\index.js":"4","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\HomePage.js":"5","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\UserComponents\\AddUser.js":"6","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\Header.js":"7","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\LoginComponents\\Logout.js":"8","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\UserComponents\\UpdateUser.js":"9","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\UserComponents\\UserDetails.js":"10","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PatientComponents\\AddPatient.js":"11","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PatientComponents\\EditPatientDetails.js":"12","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PatientComponents\\ViewPatient.js":"13","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\LoginComponents\\Login.js":"14","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PatientComponents\\ViewPatientDetails.js":"15","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\UpdateDoctor.js":"16","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\ViewByDate.js":"17","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\ViewDoctor.js":"18","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\AddDoctor.js":"19","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\DoctorDetail.js":"20","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\AddPolicy.js":"21","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\ViewBySpecialization.js":"22","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\SearchPolicyByPolicyNumber.js":"23","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\ViewPolicies.js":"24","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\UpdateSpecficPolicy.js":"25","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\ViewFinance.js":"26","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\FindFinanceById.js":"27","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\AddFinance.js":"28","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\Footer.js":"29","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\AppointmentComponents\\Viewappointment.js":"30","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\UpdateFinance.js":"31","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\TreatmentList.js":"32","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\AddTreatment.js":"33","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\AppointmentComponents\\AddAppointment.js":"34","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\ViewTreatment.js":"35","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\UpdateTreatment.js":"36","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\FinanceReducer.js":"37","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\UserReducer.js":"38","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\AppointmentReducer.js":"39","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\PolicyReducer.js":"40","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\PatientRegistrationReducer.js":"41","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\LoginReducer.js":"42","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\DoctorReducer.js":"43","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\TreatmentReducer.js":"44","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\PolicyDetails.js":"45","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\AppointmentActions.js":"46","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\TreatmentActions.js":"47","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\FilterComponent.js":"48","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\LoginActions.js":"49","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\FinanceActions.js":"50","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\UserActions.js":"51","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\DoctorActions.js":"52","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\PolicyActions.js":"53","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\PatientRegistrationAction.js":"54"},{"size":879,"mtime":1610859262000,"results":"55","hashOfConfig":"56"},{"size":4812,"mtime":1610941930446,"results":"57","hashOfConfig":"56"},{"size":362,"mtime":1610859262000,"results":"58","hashOfConfig":"56"},{"size":719,"mtime":1610859274000,"results":"59","hashOfConfig":"56"},{"size":1272,"mtime":1610859262000,"results":"60","hashOfConfig":"56"},{"size":11317,"mtime":1610859274000,"results":"61","hashOfConfig":"56"},{"size":15081,"mtime":1610945990752,"results":"62","hashOfConfig":"56"},{"size":550,"mtime":1610859264000,"results":"63","hashOfConfig":"56"},{"size":7392,"mtime":1610862060000,"results":"64","hashOfConfig":"56"},{"size":4395,"mtime":1610909290161,"results":"65","hashOfConfig":"56"},{"size":7048,"mtime":1610884502000,"results":"66","hashOfConfig":"56"},{"size":6540,"mtime":1610902589539,"results":"67","hashOfConfig":"56"},{"size":6174,"mtime":1610909859220,"results":"68","hashOfConfig":"56"},{"size":3985,"mtime":1610859264000,"results":"69","hashOfConfig":"56"},{"size":3861,"mtime":1610911838423,"results":"70","hashOfConfig":"56"},{"size":5572,"mtime":1610955041972,"results":"71","hashOfConfig":"56"},{"size":3034,"mtime":1610877924000,"results":"72","hashOfConfig":"56"},{"size":8129,"mtime":1610942120255,"results":"73","hashOfConfig":"56"},{"size":6664,"mtime":1610942052862,"results":"74","hashOfConfig":"56"},{"size":4058,"mtime":1610911569385,"results":"75","hashOfConfig":"56"},{"size":7985,"mtime":1610942186190,"results":"76","hashOfConfig":"56"},{"size":3006,"mtime":1610864920000,"results":"77","hashOfConfig":"56"},{"size":3212,"mtime":1610942245313,"results":"78","hashOfConfig":"56"},{"size":3177,"mtime":1610910774712,"results":"79","hashOfConfig":"56"},{"size":6475,"mtime":1610912598173,"results":"80","hashOfConfig":"56"},{"size":5380,"mtime":1610913214710,"results":"81","hashOfConfig":"56"},{"size":4249,"mtime":1610913217843,"results":"82","hashOfConfig":"56"},{"size":7830,"mtime":1610912181048,"results":"83","hashOfConfig":"56"},{"size":530,"mtime":1610859264000,"results":"84","hashOfConfig":"56"},{"size":3597,"mtime":1610909751985,"results":"85","hashOfConfig":"56"},{"size":7071,"mtime":1610859264000,"results":"86","hashOfConfig":"56"},{"size":3898,"mtime":1610914135956,"results":"87","hashOfConfig":"56"},{"size":9745,"mtime":1610950567522,"results":"88","hashOfConfig":"56"},{"size":7247,"mtime":1610907486686,"results":"89","hashOfConfig":"56"},{"size":5993,"mtime":1610954101025,"results":"90","hashOfConfig":"56"},{"size":6486,"mtime":1610941849535,"results":"91","hashOfConfig":"56"},{"size":2072,"mtime":1610942563010,"results":"92","hashOfConfig":"56"},{"size":1886,"mtime":1610859274000,"results":"93","hashOfConfig":"56"},{"size":1623,"mtime":1610942524465,"results":"94","hashOfConfig":"56"},{"size":1783,"mtime":1610859274000,"results":"95","hashOfConfig":"56"},{"size":2137,"mtime":1610859274000,"results":"96","hashOfConfig":"56"},{"size":1508,"mtime":1610859274000,"results":"97","hashOfConfig":"56"},{"size":1714,"mtime":1610859274000,"results":"98","hashOfConfig":"56"},{"size":2743,"mtime":1610859274000,"results":"99","hashOfConfig":"56"},{"size":2894,"mtime":1610942247784,"results":"100","hashOfConfig":"56"},{"size":2147,"mtime":1610859262000,"results":"101","hashOfConfig":"56"},{"size":3758,"mtime":1610901484338,"results":"102","hashOfConfig":"56"},{"size":10039,"mtime":1610953942750,"results":"103","hashOfConfig":"56"},{"size":1211,"mtime":1610859262000,"results":"104","hashOfConfig":"56"},{"size":2866,"mtime":1610881512000,"results":"105","hashOfConfig":"56"},{"size":2765,"mtime":1610859262000,"results":"106","hashOfConfig":"56"},{"size":3553,"mtime":1610901660050,"results":"107","hashOfConfig":"56"},{"size":2789,"mtime":1610859262000,"results":"108","hashOfConfig":"56"},{"size":3650,"mtime":1610859262000,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"18ja6bf",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\index.js",[],["224","225"],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\App.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\reportWebVitals.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\index.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\HomePage.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\UserComponents\\AddUser.js",["226","227"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/UserActions'\n\n\n\nclass AddUser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.Name = React.createRef();\n        this.Gender = React.createRef();\n        this.Email = React.createRef();\n        this.Password = React.createRef();\n        this.Age = React.createRef();\n        this.ContactNumber = React.createRef();\n        this.Address = React.createRef();\n        this.Role = React.createRef();\n        this.state={\n            nameError: \"\",\n            emailError: \"\",\n            passwordError: \"\",\n            ageError: \"\",\n            contactError: \"\",\n            addressError: \"\"\n        }\n    }\n\n    validate = () => {\n\n        if (this.Name.current.value === \"\") {\n            this.setState({ nameError: \"Name cannot be empty\" });\n            return false;\n        } else{\n            this.setState({ nameError: \"\" });\n        }\n        \n        if (typeof this.Email.current.value !== \"undefined\") {\n            var pattern = new RegExp(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/);\n            console.log(\"email value= \"+!pattern.test(this.Email.current.value))\n            if (!pattern.test(this.Email.current.value)) {\n                this.setState({ emailError: \"Please enter valid email address.\" });\n                return false;\n            }\n        } else{\n            this.setState({ emailError: \"\" });\n        }\n        \n        if(this.Password.current.value !== \"\"){\n            var pattern1 = new RegExp(/^(?=.*[a-z])(?=.*[0-9])(?=.{7,})/);  \n            console.log(\"password value= \"+!pattern1.test(this.Password.current.value))\n            if(!pattern1.test(this.Password.current.value)){\n                this.setState({ passwordError: \"Please enter valid Password.\" });\n                return false;\n            }\n        }\n        else if (this.Password.current.value === \"\") {\n            this.setState({ passwordError: \"Password cannot be empty\" });\n            return false;\n        }else{\n            this.setState({ passwordError: \"\" });\n        }\n        \n        if (this.Address.current.value === \"\") {\n            this.setState({ addressError: \"Address cannot be empty\" });\n            return false;\n        }else{\n            this.setState({ addressError: \"\" });\n        }\n\n        if(this.ContactNumber.current.value.length !== 10){   \n            this.setState({contactError: \"Please enter valid phone number.\"});         \n            return false;                             \n        }else{\n            this.setState({ contactError: \"\" });\n        }\n\n        if(this.Age.current.value.length > 2||this.Age.current.value.length < 1||this.Age.current.value===0){   \n            this.setState({ageError: \"Please enter valid age.\"});         \n            return false;                             \n          }else{\n            this.setState({ ageError: \"\" });\n          }\n\n        return true;\n    }\n\n\n    addUser(event) {\n        event.preventDefault();\n        const isValid = this.validate();\n        // console.log(isValid)\n        if (isValid) {\n            console.log('A name was submitted: ' + this.Name.current.value);\n            console.log('A gender was submitted: ' + this.Gender.current.value);\n            console.log('A email was submitted: ' + this.Email.current.value);\n            console.log('A password was submitted: ' + this.Password.current.value);\n            console.log('A age was submitted: ' + this.Age.current.value);\n            console.log('A contact was submitted: ' + this.ContactNumber.current.value);\n            console.log('A address was submitted: ' + this.Address.current.value);\n            console.log('A role was submitted: ' + this.Role.current.value);\n\n            let input = {\n                name: this.Name.current.value, gender: this.Gender.current.value, email: this.Email.current.value, password: this.Password.current.value,\n                age: this.Age.current.value, contactNumber: this.ContactNumber.current.value, address: this.Address.current.value, role: this.Role.current.value\n            };\n            // this.props.onAddUser(input);\n            \n            // console.log(JSON.stringify(input))\n            \n            // let userString = JSON.stringify(input)\n\n            if(input.role === 'Patient') {\n                console.log('patient reg')\n                this.props.history.push({\n                    pathname: '/patientregistration',\n                    userObject: input\n                })\n            } else if(input.role === 'Doctor') {\n                console.log('doctor reg')\n                this.props.history.push({\n                pathname:`/doctorregistration/`,\n                userObject: input\n                })\n            } else {\n                this.props.onAddUser(input)\n                this.props.history.push('/login')\n            }\n\n        }\n        else {\n            alert('Invalid Input')\n\n        }\n        \n        \n\n    }\n\n    cancel() {\n        this.props.history.push(`/`);\n    }\n\n    render() {\n        return (\n            <div className=\"container shadow-lg p-4 pt-3 bg-white text-dark border border-secondary rounded\">\n                <h1 className=\"mx-auto text-center \" >Registration</h1>\n                \n\n                {/* <form> */}\n                    <div className=\"row mt-3\">\n                        <div className=\"col-sm-4\">\n                            <label className=\"form-label text-center\">Name</label>\n                        </div>\n                        <div className=\"col-sm-8\">\n                            <input type=\"text\" ref={this.Name} className=\"form-control  bg-light text-dark\" placeholder=\"Enter your Name\" />\n                        </div>\n                    </div>\n                    {this.state.nameError ? (<div style={{ fontSize: \"14px\", color: \"red\" }}> {this.state.nameError} </div>) : null}\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col-sm-4\">\n                            <label className=\"form-label\">Gender </label>\n                        </div>\n                        <div className=\"col-sm-8 form-floating\">\n                            <select className=\"form-select\" id=\"floatingSelect\" ref={this.Gender} placeholder=\"Enter your Gender\">\n                                <option>Male</option>\n                                <option>Female</option>\n                            </select>\n                            <label htmlFor=\"floatingSelect\">Enter your Gender</label>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col-sm-4\">\n                            <label className=\"form-label\">Email ID </label>\n                        </div>\n                        <div className=\"col-sm-8\">\n                            <input type=\"email\" ref={this.Email} className=\"form-control\" placeholder=\"Enter your Email Id\" />\n                        </div>\n                    </div>\n                    {this.state.emailError ? (<div style={{ fontSize: \"14px\", color: \"red\" }}> {this.state.emailError} </div>) : null}\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col-sm-4 float-left\">\n                            <label className=\"form-label\">Password</label>\n                        </div>\n                        <div className=\"col-sm-8  \">\n                            <input type=\"password\" className=\"form-control\" ref={this.Password} rows=\"3\" placeholder=\"Password should have atleast one alphabet, one digit and atleast 7 characters\" />\n                            {/* <label htmlFor=\"floatingSelect\">Password should have at least one alphabet, one digit and atleast 7 characters</label> */}\n                        </div>\n                    </div>\n                    {this.state.passwordError ? (<div style={{ fontSize: \"14px\", color: \"red\" }}> {this.state.passwordError} </div>) : null}\n\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col-sm-4 float-left\">\n                            <label className=\"form-label\">Age</label>\n                        </div>\n                        <div className=\"col-sm-8 \">\n                            <input type=\"number\" ref={this.Age} className=\"form-control\" placeholder=\"Enter your Age\" />\n                        </div>\n                    </div>\n                    {this.state.ageError ? (<div style={{ fontSize: \"14px\", color: \"red\" }}> {this.state.ageError} </div>) : null}\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col-sm-4 float-left\">\n                            <label className=\"form-label\">Contact Number</label>\n                        </div>\n                        <div className=\"col-sm-8 \">\n                            <input type=\"number\" ref={this.ContactNumber} className=\"form-control\" placeholder=\"Enter your Contact no.\" />\n                        </div>\n                    </div>\n                    {this.state.contactError ? (<div style={{ fontSize: \"14px\", color: \"red\" }}> {this.state.contactError} </div>) : null}\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col-sm-4 float-left\">\n                            <label className=\"form-label\">Address</label>\n                        </div>\n                        <div className=\"col-sm-8 \">\n                            <textarea className=\"form-control\" ref={this.Address} rows=\"3\" placeholder=\"Enter your Address\"></textarea>\n                        </div>\n                    </div>\n                    {this.state.addressError ? (<div style={{ fontSize: \"14px\", color: \"red\" }}> {this.state.addressError} </div>) : null}\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col-sm-4\">\n                            <label className=\"form-label\">Role </label>\n                        </div>\n                        <div className=\"col-sm-8 form-floating\">\n                            <select className=\"form-select\" id=\"floatingSelect\" ref={this.Role} placeholder=\"Select your Role\">\n                                <option>Patient</option>\n                                <option>Doctor</option>\n                                <option>Admin</option>\n                            </select>\n                            <label htmlFor=\"floatingSelect\">Select your Role</label>\n                        </div>\n                    </div>\n\n                    <div className=\"col-sm-12 mt-3 text-center\">\n                        <button onClick={this.addUser.bind(this)} type=\"button\" className=\"btn btn-primary\">NEXT</button>\n                        <button type=\"button\" className=\"btn btn-danger\" style={{ marginLeft: \"10px\" }} onClick={this.cancel.bind(this)}> Back</button>\n\n                    </div>\n                {/* </form> */}\n            </div>\n\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        message: state.user.message,\n    }\n}\n\nconst mapDispatchToState = (dispatch) => {\n    return {\n        onAddUser: (payload) => dispatch(actions.addUser(payload))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(AddUser);\n\n","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\Header.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\LoginComponents\\Logout.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\UserComponents\\UpdateUser.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\UserComponents\\UserDetails.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PatientComponents\\AddPatient.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PatientComponents\\EditPatientDetails.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PatientComponents\\ViewPatient.js",["228"],"import React, { Component } from 'react'\nimport {\n    Link\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/PatientRegistrationAction';\nimport { Button, Card, Accordion, Row, Col, Container } from 'react-bootstrap';\n\n\nclass ViewPatient extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log('In constructor', props)\n        this.date = React.createRef();\n\n    }\n\n    componentDidMount() {\n        console.log('Initialization code goes here..');\n        this.props.onFetchPatients();\n    }\n\n    delete(id) {\n        console.log('Delete code goes here..');\n        this.props.onDeletePatient(id);\n    }\n\n    search(event) {\n        console.log(\"Search by dates....\")\n        let input = this.date.current.value\n        console.log(input)\n        this.props.onSearchByDates(input)\n        event.preventDefault();\n    }\n    resetFilter(){\n        \n            this.props.onFetchPatients();\n        \n    }\n\n    render() {\n        console.log(this.props.patients)\n        \n        let patientList = this.props && this.props.patients.length > 0 ? Object.values(this.props.patients).map((patient, i) => {\n            if (patient) {\n                return (\n                    <tr key={i}>\n                        <th scope=\"row\">{i + 1}</th>\n                        <td>{patient.user.name}</td>\n                        <td>{patient.bloodGroup}</td>\n                        <td>{patient.medication}</td>\n                        <td>{patient.policyNumber}</td>\n                        <td>{patient.allergies}</td>\n                        <td><Link class=\"btn btn-info btn-sm\" to={'/patient/view/' + patient.patientId}>View User Details</Link></td>\n                        {/* <td><button class=\"btn btn-danger btn-sm\" onClick={this.delete.bind(this, patient.patientId)}>DELETE</button></td> */}\n                        <td><Link class=\"btn btn-info btn-sm\" to={'/patient/update/' + patient.patientId}>Update</Link></td>\n                    </tr>\n                )\n            }\n        }) : (<div> NO PATIENTS FOUND</div>)\n\n        return (\n            <div className=\"container shadow-lg p-4 pt-3 bg-white text-dark border border-secondary rounded\">\n                <Accordion>\n                    <Card>\n                        <Card.Header>\n                            <Accordion.Toggle as={Button} variant=\"primary-sm\" eventKey=\"0\">\n                                <h5>Filter</h5>\n                            </Accordion.Toggle>\n                            <Button variant=\"primary-sm\" style={{ margin: \"10px\" }} onClick={this.resetFilter.bind(this)}><h5>Remove</h5></Button>\n                        </Card.Header>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Container fluid>\n                                    <Row>\n                                        <Col >\n                                            <Card  style={{width : \"25%\"}}>\n                                                <Card.Body>\n                                                    <div>\n                                                        <h6>Search by Date</h6>\n                                                    </div>\n                                                    <div>\n                                                    <input class=\"form-control\" type=\"date\" ref={this.date} id=\"example-date-input\" />                                                    </div>\n                                                    <div style={{marginTop:\"10px\"}}>\n                                                    <button class=\"btn btn-outline-primary btn-sm inline\" onClick={this.search.bind(this)}>Search</button>\n                                                    </div>\n                                                \n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                        </Row>\n                                </Container>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n               \n                <div className=\"container pt-3\">\n                    <div className=\"mb-3\">\n                        <div class={(this.props.message === '') ? '' : 'alert alert-success '} role=\"alert\">\n                            {this.props.message}\n                        </div>\n                    </div>\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr style={{backgroundColor:'lightgrey'}}>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">NAME</th>\n                                <th scope=\"col\">BloodGroup</th>\n                                <th scope=\"col\">Medication</th>\n                                <th scope=\"col\">Symptoms</th>\n                                <th scope=\"col\">Allergies</th>\n                                <th scope=\"col\">User</th>\n                                {/* <th scope=\"col\">DELETE</th> */}\n                                <th scope=\"col\">UPDATE</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {patientList}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log()\n    return {\n        message: state.patientregistration.message,\n        patients: state.patientregistration.patients\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchPatients: () => {\n            console.log('debug info')\n            return dispatch(actions.fetchPatients())\n        },\n        onDeletePatient: (id) => dispatch(actions.deletePatient(id)),\n        onSearchByDates: (payload) => dispatch(actions.searchByDate(payload))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewPatient)","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\LoginComponents\\Login.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PatientComponents\\ViewPatientDetails.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\UpdateDoctor.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\ViewByDate.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\ViewDoctor.js",["229"],"\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/DoctorActions';\nimport { withRouter } from 'react-router';\nimport { Button, Card, Accordion, Row, Col, Container } from 'react-bootstrap';\n\n\nclass ViewDoctor extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log('In constructor', props)\n        this.date = React.createRef();\n        this.specialization = React.createRef();\n    }\n\n    componentDidMount() {\n\n        this.props.onFetchDoctors();\n    }\n\n    update(id) {\n        this.props.history.push(`/doctor/update/${id}`);\n    }\n\n    checkbyDate() {\n        // this.props.history.push(`/doctorbydate/${this.date.current.value}`);\n        this.props.onGetdoctorbydate(this.date.current.value);\n    }\n    checkBySpec() {\n       \n        this.props.onGetdoctorbyspecialization(this.specialization.current.value);\n        \n    }\n\n    view(id) {\n        this.props.history.push(`/doctor/view/${id}`);\n    }\n\n    resetFilter() {\n\n        this.props.onFetchDoctors();\n\n    }\n    render() {\n\n        console.log(this.props.doctors)\n        if (!this.props.doctors) {\n            \n            return (<p>Nothing to show</p>)\n        }\n\n        var doctorList = this.props && Object.values(this.props.doctors).length>0 ? Object.values(this.props.doctors).map((doctor, i) => {\n            \n            if(doctor.user){\n                \n            return (\n                <tr key={i}>\n                    <th scope=\"row\">{i + 1}</th>\n                    <td>{doctor.user.name}</td>\n                    <td>{doctor.specialization}</td>\n                    <td>{doctor.qualification}</td>\n                    <td>{doctor.experience}</td>\n                    <td>{doctor.inTime}</td>\n                    <td>{doctor.outTime}</td>\n\n                    <td><button className=\"btn btn-primary btn-sm\" onClick={this.view.bind(this, doctor.doctorId)}> DOCTOR DETAILS </button></td>\n                    <td><button className=\"btn btn-info btn-sm\" onClick={this.update.bind(this, doctor.doctorId)}>UPDATE</button></td>\n\n                </tr>\n            )}\n            \n        }) :(<div>NO DOCTORS FOUND</div>)\n        \n        return (\n            <div className=\"container shadow-lg p-4 pt-3 bg-white text-dark border border-secondary rounded\">\n                <Accordion>\n                    <Card>\n                        <Card.Header>\n                            <Accordion.Toggle as={Button} variant=\"primary-sm\" eventKey=\"0\">\n                                <h5>Filter</h5>\n                            </Accordion.Toggle>\n                            <Button variant=\"primary-sm\" style={{ margin: \"10px\" }} onClick={this.resetFilter.bind(this)}><h5>Remove</h5></Button>\n                        </Card.Header>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Container fluid>\n                                    <Row>\n                                        <Col >\n                                            <Card >\n                                                <Card.Body>\n                                                    <div>\n                                                        <h6>Search by Date</h6>\n                                                    </div>\n                                                    <div>\n                                                        <input type=\"date\" ref={this.date} className=\"form-control\" placeholder=\"Enter Date\" />\n                                                    </div>\n                                                    <div style={{ marginTop: \"10px\" }}>\n                                                        <button className=\"btn btn-primary btn-sm\" onClick={this.checkbyDate.bind(this)}> SEARCH BY DATE </button>\n                                                    </div>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                        <Col >\n                                            <Card >\n                                                <Card.Body>\n                                                    <div>\n                                                        <h6>Search by Specialization</h6>\n                                                    </div>\n                                                    <div>\n                                                        <select className=\"form-select\" id=\"floatingSelect\" ref={this.specialization} placeholder=\"Select your Specialization\">\n                                                            <option>Surgeon</option>\n                                                            <option>Cardiologist</option>\n                                                            <option>Gynocologist</option>\n                                                            <option>Genereal Physician\t</option>\n                                                            <option>Pediatrecian</option>\n                                                        </select>\n                                                    </div>\n                                                    <div style={{ marginTop: \"10px\" }}>\n                                                        <button className=\"btn btn-primary btn-sm\" onClick={this.checkBySpec.bind(this)}> SEARCH BY SPECIALIZATION</button>\n                                                    </div>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n\n                <div className=\"container pt-3\">\n                    {/* <div className=\"mb-3\">\n                        <div className={(this.props.message === '') ? '' : 'alert alert-warning alert-dismissible fade show '} role=\"alert\">\n                            {this.props.message}\n                        </div>\n                    </div> */}\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr style={{backgroundColor:'lightgrey'}}>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Specialization</th>\n                                <th scope=\"col\">Qualification</th>\n                                <th scope=\"col\">Experience</th>\n                                <th scope=\"col\">INTIME</th>\n                                <th scope=\"col\">OUTTIME</th>\n                                <th scope=\"col\">VIEW DETAIL</th>\n                                <th scope=\"col\">UPDATE</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {doctorList}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    console.log(\"In mapstate \")\n\n    return {\n        message: state.doctor.message,\n        doctors: state.doctor.doctors,\n        date:ownProps.match.params.date\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchDoctors: () => {\n            console.log('debug info')\n            return dispatch(actions.fetchDoctors())\n        },\n        onGetdoctorbydate: (date) => {\n            console.log('debug info')\n            return dispatch(actions.getdoctorbydate(date))\n        },\n        onGetdoctorbyspecialization: (specialization) => {\n            console.log('debug info')\n            return dispatch(actions.getdoctorbyspecialization(specialization))\n}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ViewDoctor))","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\AddDoctor.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\DoctorDetail.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\AddPolicy.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\DoctorComponents\\ViewBySpecialization.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\SearchPolicyByPolicyNumber.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\ViewPolicies.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\UpdateSpecficPolicy.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\ViewFinance.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\FindFinanceById.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\AddFinance.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\Footer.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\AppointmentComponents\\Viewappointment.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\FinanceComponents\\UpdateFinance.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\TreatmentList.js",["230"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/TreatmentActions'\nimport FilterComponent from './FilterComponent';\n\nclass TreatmentList extends Component {\n\n    componentDidMount() {\n        \n        if(localStorage.getItem('role')==='Admin'){\n            console.log(this.props)\n        this.props.onFetchTreatments();\n        }\n        else if(localStorage.getItem('role')==='Doctor'){\n            this.props.onFetchTreatmentsByDoctorId(localStorage.getItem('id'));\n        }\n        else{\n            this.props.onFetchTreatmentsByPatientId(localStorage.getItem('id'));\n        }     \n    }\n    \n    render() {\n        console.log(this.props.treatments)\n        if(!this.props.treatments){\n            return (<p>Nothing to show</p>)\n        }\n        \n        let treatmentList = this.props && this.props.treatments.length > 0 && this.props.treatments[0] ? Object.values(this.props.treatments).map((treatment, i)=> {\n            \n            if(treatment){\n            return (\n                    <tr key={i}>\n                    <th scope=\"row\">{i+1}</th>\n                    <td>{treatment.doctorName}</td>\n                    <td>{treatment.patientName}</td>\n                    <td>{treatment.disease}</td>\n                    <td>{treatment.medicine}</td>\n                    <td>{new Intl.DateTimeFormat('en-IN', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(new Date(treatment.createdAt))}</td>\n                    <td>\n                    <Link to={\"/updatetreatment/\"+treatment.treatmentId}><button  className=\"btn btn-info\">Update</button></Link>\n                    <Link to={\"/viewtreatment/\"+treatment.treatmentId}><button  className=\"btn btn-info\" style={{marginLeft:'10px'}}>View</button></Link>\n                    { localStorage.getItem('role')==='Admin' && <Link to={\"/finance/add/\"+treatment.treatmentId}><button  className=\"btn btn-info\" style={{marginLeft:'10px'}}>Make Bill</button></Link>}\n                    </td>\n                    </tr>\n            )}\n        }): (<div> NO TREATMENTS FOUND</div>)\n        return (\n            <div className=\"container shadow-lg p-4 pt-3 bg-white text-dark border border-secondary rounded\">\n            <div className=\"container\">\n                <FilterComponent></FilterComponent> \n                <br/>\n                <h2 className=\"text-center\" >Treatment List</h2>\n\n                <div className = \"row\">\n                <table className=\"table table-striped\">\n                <thead>\n                    <tr style={{backgroundColor:'lightgrey'}}>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Doctor Name</th>\n                    <th scope=\"col\">Patient Name</th>\n                    <th scope=\"col\">Disease</th>\n                    <th scope=\"col\">Medicine</th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {treatmentList}\n                </tbody>\n                </table>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        message: state.treatment.message,\n        treatments: state.treatment.treatments\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchTreatments: () => {\n        return dispatch(actions.fetchTreatments())\n        },\n        onFetchTreatmentsByDoctorId: (id) => {\n        return dispatch(actions.fetchByDoctorId(id))\n        },\n        onFetchTreatmentsByPatientId: (id) =>{\n            return dispatch(actions.fetchByPatientId(id))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TreatmentList);","D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\AddTreatment.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\AppointmentComponents\\AddAppointment.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\ViewTreatment.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\UpdateTreatment.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\FinanceReducer.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\UserReducer.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\AppointmentReducer.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\PolicyReducer.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\PatientRegistrationReducer.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\LoginReducer.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\DoctorReducer.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\store\\TreatmentReducer.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\PolicyComponents\\PolicyDetails.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\AppointmentActions.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\TreatmentActions.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\components\\TreatmentComponents\\FilterComponent.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\LoginActions.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\FinanceActions.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\UserActions.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\DoctorActions.js",[],["231","232"],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\PolicyActions.js",[],"D:\\Users\\SUMIT\\Documents\\Front End\\healthcare-Management-System-master\\src\\actions\\PatientRegistrationAction.js",[],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":39,"column":54,"nodeType":"239","messageId":"240","endLine":39,"endColumn":55,"suggestions":"241"},{"ruleId":"237","severity":1,"message":"238","line":39,"column":74,"nodeType":"239","messageId":"240","endLine":39,"endColumn":75,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":45,"column":126,"nodeType":"245","messageId":"246","endLine":45,"endColumn":128},{"ruleId":"243","severity":1,"message":"244","line":54,"column":135,"nodeType":"245","messageId":"246","endLine":54,"endColumn":137},{"ruleId":"243","severity":1,"message":"244","line":29,"column":161,"nodeType":"245","messageId":"246","endLine":29,"endColumn":163},{"ruleId":"233","replacedBy":"247"},{"ruleId":"235","replacedBy":"248"},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["251","252"],["253","254"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["249"],["250"],"no-global-assign","no-unsafe-negation",{"messageId":"255","fix":"256","desc":"257"},{"messageId":"258","fix":"259","desc":"260"},{"messageId":"255","fix":"261","desc":"257"},{"messageId":"258","fix":"262","desc":"260"},"removeEscape",{"range":"263","text":"264"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"265","text":"266"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"267","text":"264"},{"range":"268","text":"266"},[1116,1117],"",[1116,1116],"\\",[1136,1137],[1136,1136]]